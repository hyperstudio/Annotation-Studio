<%= render :partial => "shared/annotator_base" %>

<script type="text/javascript" charset="utf-8">
var document_id = <%= @document.id %>;
var default_state = '<%= @document.default_state || '' %>';
var groups = [];
var subgroups = [];
var annotatorOptions = {'readOnly': 'true'};
var filter_user = "<%= @document.user.email %>";
var token = '';
var annotation_username = "<%= @document.user.first_name_last_initial %>";
var sidebar_sort_editable = false;
var mobile_device = <%= mobile_device? -%>;
var search_context = 'public';

var plugin_options = function() {
  return {
    Filter: false,
    Auth: {
      token: '<%= session["guest_jwt"] %>'
    },
    Store: {
      prefix: '<%= ENV["API_URL"] %>',
      annotationData: {
        'uri': [location.protocol, '//', location.host, location.pathname].join(''),
      },
      loadFromSearch: annotation_studio.loadOptions({ mode: 'user' })
    },
    Markdown: false, // use RichText instead
    AnnotateItPermissions: false, // this is built into the kitchen sink, so cancel it
    Permissions: {
      user: "<%= @document.user.email %>",
      permissions: {
        'read': [], // default: review mode; this is what users will need to control
        'update': ['<%= @document.user.email %>'], // no one else can ever update
        'delete': ['<%= @document.user.email %>'], // no one else can ever delete
        'admin': ['<%= @document.user.email %>'] // no one else can ever admin
      },
      userString: function (user) {
        return user.split("@")[0]
      },
      // Permissions settings per-annotation
      showViewPermissionsCheckbox: false,
      showEditPermissionsCheckbox: false
    }
    <% if ENV["ANNOTATOR_CATEGORIES"] == 'true' -%>
    , Categories: <%= raw AnnotationCategory.to_plugin_init %>
    <% end -%>
  };
};

jQuery(function ($) {
  <% if @document.user.has_role?(:admin) %>
    $('#adminview').on('click', { mode: 'admin', id: 'adminview' }, modeFilter);
  <% end %>
});
</script>
