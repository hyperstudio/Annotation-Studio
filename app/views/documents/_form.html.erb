<%= form_for (@document), :html => { :role => "form", class: "confirm-changes" } do |f| %>
  <% if !@document.errors.messages.empty? %>
    <% if @document.errors.messages[:upload] %>
      <% flash[:error] = @document.errors.messages[:upload][0] %>
    <% end %>
  <% end %>
  <%= render "document_content", f: f %>
  <div class="document-meta-wrapper">
    <div class = "panel panel-default"><!--column layout for metadata and status-->
      <div class="panel-heading">
        <h4 class="panel-title" >
          Metadata
        </h4>
      </div>
      <!--white metadata panel starts-->
      <div class="metadataStyle">
        <% if create %>
          <div class="form-group">
            <%= label_tag "Type of Resource" %>
            <p class="help-block"> eg. Book, Website, etc...</p>
            <%= select_tag "type", options_for_select(["Book", "Website", "Journal", "Other"], "Book"), { :class => "form-control", :id => "type", :onchange => "change(this.id)" } %>
          </div>
        <% else %>
          <%= label_tag "Type: " + (@document.resource_type == "" ? "none" : @document.resource_type) %>
          <%= hidden_field_tag "type", @document.resource_type, onchange: "change(this.id)" %>
        <% end %>
        <div class="row">
          <div class="col-md-6">
            <div class="form-group">
              <%= f.label :author %>
              <%= f.text_field :author, :class => "form-control", :maxlength => 254 %>
            </div>
            <div class="form-group">
              <%= f.label :publication_date %>
              <%= f.text_field :publication_date, :class => "form-control", :maxlength => 254 %>
            </div>
            <div class="form-group">
              <%= f.label :rights_status %>
              <%= f.select :rights_status, ["Copyrighted", "Public Domain", "Creative Commons"], {}, { :class => "form-control" } %>
            </div>
            <div class="form-group optional" id="edition" style="display:none">
              <%= f.label :edition, "Edition/Volume" %>
              <%= f.text_field :edition, :class => "form-control", :maxlength => 254 %>
            </div>
            <div class="form-group optional" id="page_numbers" style="display:none">
              <%= f.label :page_numbers %>
              <%= f.text_field :page_numbers, :class => "form-control", :maxlength => 254 %>
            </div>
          </div>
          <!-- end span 6 -->
          <div class="col-md-6">
            <div class="form-group">
              <%= f.label :title %>
              <%= f.text_field :title, :class => "form-control", :maxlength => 254 %>
            </div>
            <div class="form-group">
              <%= f.label :publisher %>
              <%= f.text_field :publisher, :class => "form-control", :maxlength => 254 %>
            </div>
            <div class="form-group optional" id="location" style="display:none">
              <%= f.label :location, "Publication Location" %>
              <%= f.text_field :location, :class => "form-control", :maxlength => 254 %>
            </div>
            <div class="form-group optional" id="series" style="display:none">
              <%= f.label :series %>
              <%= f.text_field :series, :class => "form-control", :maxlength => 254 %>
            </div>
            <div class="form-group optional" id="journal_title" style="display:none">
              <%= f.label :journal_title %>
              <%= f.text_field :journal_title, :class => "form-control", :maxlength => 254 %>
            </div>
            <div class="form-group optional" id="source" >
              <%= f.label :source %>
              <%= f.text_field :source, :class => "form-control", :maxlength => 254 %>
            </div>
          </div>
          <!-- end span 6 -->
        </div>
        <!-- end row -->
        <div class="row">
          <div class = "col-md-6">
            <div class="form-group optional" id="notes" style="display:none">
              <%= f.label :notes %>
              <p class="help-block"> Additional Metadata Information </p>
              <%= f.text_area :notes, :class => "form-control" %>
            </div>
          </div>
          <!--ends row-->
        </div>
        <!--ends row-->
      </div>
      <!--metadata style div ends-->
    </div>
    <!--ends div left-->
    <!--start of right column for status-->
    <div class="document-meta-section">
      <div class = "panel panel-default">
        <div class="panel-heading">
          <h4 class="panel-title" >
            Share with Groups
          </h4>
        </div>
        <div class="panel-body">
          <p class="greyText">Select the group(s) to which you wish to assign this document.</strong></p>
          <% if !current_user.groups.empty? %>
            <%= f.select :groups, options_from_collection_for_select(current_user.groups, :id, :name, @document.groups.pluck(:id)), { include_blank: "Groups" }, class: "ui fluid dropdown", multiple: true %>
          <% else %>
            You are not a member of any groups.
          <% end %>
      </div>
    </div>
    <div class = "panel panel-default">
      <div class="panel-heading">
        <h4 class="panel-title" >
          Status
        </h4>
      </div>
      <div class="panel-body">
        <div class="form-group">
          <table class="help-block" style="width: 50%;">
            <tr>
              <th></th>
              <th><i class="glyphicon glyphicon-eye-open"></i> View</th>
              <th><i class="glyphicon glyphicon-edit"></i> Edit</th>
              <th><i class="glyphicon glyphicon-comment"></i> Annotate</th>
            </tr>
            <tr>
              <th><i class="glyphicon glyphicon-user"></i> Me</th>
              <th><i class="glyphicon glyphicon-ok"></i></th>
              <th><i class="glyphicon glyphicon-ok"></i></th>
              <th><i class="glyphicon glyphicon-remove"></i></th>
            </tr>
            <tr>
              <th><i class="glyphicon glyphicon-blackboard"></i> Groups</th>
              <th><i class="glyphicon glyphicon-ok"></i></th>
              <th><i class="glyphicon glyphicon-remove"></i></th>
              <th><i class="glyphicon glyphicon-remove"></i></th>
            </tr>
            <% if can? :publish, Document %>
              <tr>
                <th><i class="glyphicon glyphicon-globe"></i> Public</th>
                <th><i class="glyphicon glyphicon-remove"></i></th>
                <th><i class="glyphicon glyphicon-remove"></i></th>
                <th><i class="glyphicon glyphicon-remove"></i></th>
              </tr>
            <% end %>
          </table>
          <div class="radio">
            <label>
              <%= f.radio_button :state, "draft", checked: controller.action_name == "new" ? true : @document.draft?, disabled: !@document.draft? && controller.action_name == "edit" %>
              <i class="glyphicon glyphicon-pencil"></i> Draft
            </label>
          </div>
          <div class="radio">
            <label>
              <%= f.radio_button :state, "published", checked: @document.published? %>
              <i class="glyphicon glyphicon-comment"></i> Published <b>*</b>
            </label>
          </div>
          <% if can? :archive, Document %>
            <div class="radio">
              <label>
                <%= f.radio_button :state, "archived", checked: @document.archived? %>
                <i class="glyphicon glyphicon-folder-close"></i> Archived <b>*</b>
              </label>
            </div>
          <% end %>
          <% if current_user.has_role? :admin %>
            <div class="radio">
              <label>
                <%= f.radio_button :state, "public", checked: @document.public? %>
                <i class="glyphicon glyphicon-globe"></i> Public <b>*</b>
              </label>
            </div>
          <% end %>
        </div>
        <% if current_user.has_role? :admin %>
          <% @docStatusAdmin = "a status marked with an asterisk (*)" %>
        <% else %>
          <% @docStatusAdmin = "Published or Archived" %>
        <% end %>
        <div class="draftnote">
          <b>Note</b>: Once a document has been <i class="glyphicon glyphicon-comment"></i> Published or <i class="glyphicon glyphicon-folder-close"></i> Archived, you will no longer be able to edit its content or revert its status to Draft. If you wish to modify the content of a document in the future, save it as a <i class="glyphicon glyphicon-pencil"></i> Draft. (Metadata can always be edited, regardless of document status.)
        </div>
      </div>
      <!-- end span 6 -->
    </div>
    <div class="panel-body document-form-buttons">
      <%= f.submit nil, :class => "btn btn-default btn btn-default-primary btn-success" %>
      <% if @document.state == "draft" && !@document.errors %>
        <%= link_to document_path(@document), method: :delete, class: "btn btn-default btn btn-default-primary btn-danger", data: { confirm: "Are you sure? Delete cannot be undone.", toggle: "tooltip", placement: "top", original_title: "Delete" } do %>
          Delete document
        <% end %>
      <% end %>
      <%= link_to "Cancel", dashboard_path(nav: "mydocuments"), :class => "btn btn-default btn btn-default-primary btn-default" %>
    </div>
    <!-- end row -->
  </div>
</div>
<% end %>
<script type="text/javascript">
  $(document).ready(function() {
    //toggle metadata fields onload. Ensures that the correct fields show up for EDIT
    $("#type").trigger('change');
    //turn on dropdown
    $('.ui.dropdown').dropdown();
    //turn on summernote
    $('.text-area').summernote({
      height: 300,                 // set editor height
      minHeight: null,             // set minimum height of editor
      maxHeight: null,             // set maximum height of editor
      maximumImageFileSize: 5242880,      // 5 MB
      callbacks: {
        onInit: function() {
          $(".note-group-select-from-files")
            .append("<br /><small>Supported image formats: JPG, PNG, GIF, BMP, WEBP, TIF</small>");
        },
        <% if (not ENV["DISABLE_AWS"] or ENV["DISABLE_AWS"] != "true") %>
          onImageUpload: function (files) {
            if(files[0].size > 5242880) {
              $('.progressContainer').css('display','block');
              $('.progressContainer .bar').
                css('background', '#d9534f').
                css('display', 'block').
                text('Error: File size too large. Please resize or choose a different image.');
            } else {
              $(".note-image-input").each(function(i, elem) {
                var fileInput    = $(elem);
                var progressBar  = $('.progressContainer .bar');
                var form         = $(fileInput.parents('form:first'));
                fileInput.fileupload({
                  fileInput:       fileInput,
                  maxFileSize:      5242880, // 5 MB
                  url:             <%= @s3_direct_post.url.to_json.html_safe %>,
                  type:            'POST',
                  autoUpload:       true,
                  formData:         <%= @s3_direct_post.fields.to_json.html_safe %>,
                  paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
                  dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
                  replaceFileInput: false,
                  progressall: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    progressBar.css('width', progress + '%')
                  },
                  start: function (e) {
                    $('.progressContainer').css('display','block');
                    progressBar.
                      css('background', 'green').
                      css('display', 'block').
                      css('width', '0%').
                      text("Loading...");
                  },
                  done: function(e, data) {
                    progressBar.text("Uploading done");

                    // extract key and generate URL from response
                    console.log(data.jqXHR.responseXML);
                    var url   = $(data.jqXHR.responseXML).find("Location").text();
                    $('.text-area').summernote('insertImage', url);
                    $('.progressContainer').css('display','none');
                  },
                  fail: function(e, data) {
                    progressBar.
                      css("background", "red").
                      text("Failed");
                  }
                });
                $(elem).fileupload('send', {files});
              });
            }
          },
        <% end %>
      },
      toolbar: [
        ['style', ['style']],
        ['font', ['bold', 'italic', 'underline']],
        ['para', ['ul', 'ol']],
        ['table', ['table']],
        ['insert', ['link', 'picture', 'video']],
        ['view', ['fullscreen', 'codeview', 'help']]
      ],
      cleaner:{
        action: 'paste', // both|button|paste 'button' only cleans via toolbar button, 'paste' only clean when pasting content, both does both options.
        newline: '<br>', // Summernote's default is to use '<p><br></p>'
        notStyle: 'position:absolute;top:0;left:0;right:0', // Position of Notification
        keepHtml: true, // Remove all Html formats
        keepOnlyTags: ["<strong>", "<em>", "<b>", "<i>", "<p>", "<code>", "<pre>", "<tt>", "<samp>", "<kbd>", "<var>", "<sub>", "<sup>", "<dfn>", "<cite>", "<big>", "<small>", "<address>", "<hr>", "<br>", "<div>", "<span>", "<h1>", "<h2>", "<h3>", "<h4>", "<h5>", "<h6>", "<ul>", "<ol>", "<li>", "<dl>", "<dt>", "<dd>", "<abbr>", "<acronym>", "<a>", "<img>", "<blockquote>", "<del>", "<ins>", "<table>", "<tr>", "<td>"], // If keepHtml is true, remove all tags except these
        keepClasses: false, // Remove Classes
        badTags: ['style', 'script', 'applet', 'embed', 'noframes', 'noscript'], // Remove full tags with contents
        badAttributes: ['accept', 'accept-charset', 'accesskey', 'action', 'align', 'allow', 'async', 'autocapitalize', 'autocomplete', 'autofocus', 'autoplay', 'background', 'bgcolor', 'border', 'buffered', 'capture', 'challenge', 'charset', 'checked', 'code', 'codebase', 'color', 'cols', 'colspan', 'content', 'contenteditable', 'contextmenu', 'controls', 'coords', 'crossorigin', 'csp', 'data', 'decoding', 'default', 'defer', 'dir', 'dirname', 'disabled', 'download', 'draggable', 'dropzone', 'enctype', 'enterkeyhint', 'for', 'form', 'formaction', 'formenctype', 'formmethod', 'formnovalidate', 'formtarget', 'headers', 'hidden', 'high', 'http-equiv', 'icon', 'id', 'importance', 'integrity', 'intrinsicsize', 'inputmode', 'ismap', 'itemprop', 'keytype', 'kind', 'label', 'lang', 'language', 'loading', 'list', 'loop', 'low', 'manifest', 'max', 'maxlength', 'minlength', 'media', 'method', 'min', 'multiple', 'muted', 'novalidate', 'open', 'optimum', 'pattern', 'ping', 'placeholder', 'poster', 'preload', 'radiogroup', 'readonly', 'referrerpolicy', 'rel', 'required', 'reversed', 'rows', 'rowspan', 'sandbox', 'scope', 'scoped', 'selected', 'shape', 'size', 'sizes', 'slot', 'span', 'spellcheck', 'srcdoc', 'srclang', 'srcset', 'start', 'step', 'style', 'summary', 'tabindex', 'target', 'translate', 'type', 'usemap', 'value', 'wrap'], // Remove attributes from remaining tags
        limitChars: false, // 0/false|# 0/false disables option
        limitDisplay: 'text', // text|html|both
        limitStop: false, // true/false
        icon: '<i class="fa fa-compress"></i>' 
      }
    });
    $(".note-image-input").each(function(i, elem) {
      var toolbar    = $(".note-toolbar-wrapper");
      var progressBar  = $("<div class='bar'></div>");
      var barContainer = $("<div class='progressContainer'></div>").append(progressBar);
      toolbar.after(barContainer);
    });
    // handle catalog texts
    var text = {};
    $('.clickable').on('click', function (e) {
      var id = $( this ).attr( "id" );
      var entry = text[ id ];
      $( "#document_title").val( entry['name'] );
      $( "#document_author").val( entry[ 'author'] );
      $( "#document_edition").val( entry[ 'edition'] );
      $( "#document_publisher").val( entry[ 'publisher'] );
      $( "#document_publication_date").val( entry[ 'publication_date'] );
      $( "#document_source").val( entry[ 'manuscript'] );
      $( "#document_rights_status").val( entry[ 'permissions'] );
      $( ".note-editable").html( "EID:" + id );
    })
    // Document status permissions table management
    var permissionsTable = $("table.help-block tbody")[0];
    manageTable(permissionsTable);
    $('input:radio').change(
    function(){
      manageTable(permissionsTable);
    });
    // Show or hide "Classes" permissions depending on if classes are assigned
    showHideClasses(permissionsTable);
    var tagFields = $('.ui.fluid.dropdown');
    var tagLabels = $('.ui.fluid.dropdown a');
    var tagMenus = $('.ui.fluid.dropdown div');
    tagFields.bind("keyup change click", function(){showHideClasses(permissionsTable);});
    tagLabels.bind("keyup change click",function(){showHideClasses(permissionsTable);});
    tagMenus.bind("keyup change click",function(){showHideClasses(permissionsTable);});
    <% unless (current_user.has_role? :admin) %>
      $(permissionsTable.rows[3]).children().attr('style','display:none');
      $(permissionsTable.rows[2]).children().attr('style','border-bottom:1px solid #BBB');
    <% end %>
  });
  function manageTable(table){
    var tableState = '';
    var cell;
    if($('#document_state_draft').prop("checked") == true)
      tableState = '110000000'
    else if($('#document_state_published').prop("checked") == true)
      tableState = '101101000';
    else if($('#document_state_archived').prop("checked") == true)
      tableState = '100100000';
    else if($('#document_state_public').prop("checked") == true)
      tableState = '100100100';
    for (var j = 0; j < 3; j++){
      for(var k = 0; k < 3; k++){
        cell = $(table.rows[j+1].cells[k+1]).children();
        if(!!+tableState.charAt(k+(3*j)) == true)
        cell.attr('class','glyphicon glyphicon-ok');
        else
        cell.attr('class','glyphicon glyphicon-remove');
      }
    }
  }
  function showHideClasses(table){
    if ($('.ui.fluid.dropdown a').length == 0){
      $(table.rows[2]).attr('style','display:none');
      $(table.rows[1]).attr('style','border-bottom:1px solid #BBB');
    }
    else{
      $(table.rows[2]).attr('style','border-bottom:1px solid #BBB');
      $(table.rows[1]).attr('style','border-bottom: none');
    }
  }
  //toggle metadata fields depending on document type
  function change(selected){
    var type = document.getElementById(selected);
    var type_value;
    <% if !create %>
      type_value = "<%= @document.resource_type %>";
    <% else %>
      type_value = type.value;
    <% end %>
    //use case to toggle metadata fields
    var edition = document.getElementById("edition");
    var location = document.getElementById("location");
    var page_numbers = document.getElementById("page_numbers");
    var series = document.getElementById("series");
    var journal_title = document.getElementById("journal_title");
    var notes = document.getElementById("notes");
    var source = document.getElementById("source");
    var optional_fields = document.getElementsByClassName("optional");
    switch(type_value){
      default:
        $(optional_fields).show();
        notes.style.display = "none";
        journal_title.style.display = "none";
        source.style.display = "none";
        break;
      case "Website":
        $(optional_fields).hide();
        source.style.display = "block"
        break;
      case "Book":
        $(optional_fields).show();
        notes.style.display = "none";
        journal_title.style.display = "none";
        source.style.display = "none";
        break;
      case "Journal":
        $(optional_fields).show();
        source.style.display = "none";
        notes.style.display = "none";
        series.style.display = "none";
        break;
      case "Other":
        $(optional_fields).hide();
        source.style.display = "block";
        notes.style.display = "block";
        break;
    }
  }
</script>
