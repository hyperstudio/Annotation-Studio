<%= render :partial => "shared/annotator_base" %>

<script type="text/javascript" charset="utf-8">
var groups = [];
var subgroups = [];
var annotatorOptions = {'readOnly': 'true'};
var modeFilter_user = "<%= @document.user.email %>";
var token = '';
var annotation_username = "<%= @document.user.first_name_last_initial %>";
var sidebar_sort_editable = false;
var mobile_device = <%= mobile_device? -%>;

var plugin_options = {
  Filter: false,
  Auth: {
    token: '<%= session["guest_jwt"] %>'
  },
  Store: {
    prefix: '<%= ENV["API_URL"] %>',
    annotationData: {
      'uri': [location.protocol, '//', location.host, location.pathname].join(''),
    },
    loadFromSearch: {
      'limit': 100,
      'user': "<%= @document.user.email %>",
      'mode': 'user', // default mode -- user can switch via sidebar button.
      'context': 'public',
      'uri': [location.protocol, '//', location.host, location.pathname].join('')
    }
  },
  Markdown: false, // use RichText instead
  AnnotateItPermissions: false, // this is built into the kitchen sink, so cancel it
  Permissions: {
    user: "<%= @document.user.email %>",
    permissions: {
      'read': [], // default: review mode; this is what users will need to control
      'update': ['<%= @document.user.email %>'], // no one else can ever update
      'delete': ['<%= @document.user.email %>'], // no one else can ever delete
      'admin': ['<%= @document.user.email %>'] // no one else can ever admin
    },
    userString: function (user) {
      return user.split("@")[0]
    },
    // Permissions settings per-annotation
    showViewPermissionsCheckbox: false,
    showEditPermissionsCheckbox: false
  }
};
<% if ENV["ANNOTATOR_CATEGORIES"] == 'true' -%>
plugin_options.Categories = <%= raw AnnotationCategory.to_plugin_init %>;
<% end -%>

jQuery(function ($) {
  <% if @document.user.has_role?(:admin) %>
    $('#adminview').on('click', { mode: 'admin', id: 'adminview' }, modeFilter);
  <% end %>
});
</script>
